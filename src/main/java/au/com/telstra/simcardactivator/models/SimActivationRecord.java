package au.com.telstra.simcardactivator.models;

// JPA (Java Persistence API) annotations for database mapping
import javax.persistence.Entity; // Marks this class as a JPA entity
import javax.persistence.GeneratedValue; // Specifies generation strategies for primary keys
import javax.persistence.GenerationType; // Defines standard strategies for primary key generation
import javax.persistence.Id; // Marks the primary key field
import javax.persistence.Table; // Specifies the primary table for the entity

/**
 * Represents a record of a SIM card activation transaction in the database.
 * This entity maps directly to a table named "sim_activation_records" in the H2 database.
 */
@Entity // Declares this class as a JPA entity, indicating it maps to a database table
@Table(name = "sim_activation_records") // Specifies the name of the database table
public class SimActivationRecord {

    // Primary key for the table, automatically generated by the database
    @Id // Marks this field as the primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Configures the ID to be auto-incremented by the database
    private Long id; // Use Long (wrapper class) for ID as it can be null before being saved

    // The unique global identifier for the SIM card
    private String iccid;

    // The email address of the customer associated with the SIM card
    private String customerEmail;

    // Boolean value indicating whether the SIM activation was successful
    private boolean active; // Using primitive 'boolean' for the active status

    /**
     * Default no-argument constructor.
     * JPA requires a no-argument constructor for entity instantiation.
     */
    public SimActivationRecord() {
    }

    /**
     * Parameterized constructor to create a new record (excluding ID, which is auto-generated).
     * @param iccid The ICCID of the SIM card.
     * @param customerEmail The customer's email address.
     * @param active The activation status (true for successful, false for failed).
     */
    public SimActivationRecord(String iccid, String customerEmail, boolean active) {
        this.iccid = iccid;
        this.customerEmail = customerEmail;
        this.active = active;
    }

    // --- Getters ---

    public Long getId() {
        return id;
    }

    public String getIccid() {
        return iccid;
    }

    public String getCustomerEmail() {
        return customerEmail;
    }

    public boolean isActive() {
        return active;
    }

    // --- Setters ---

    // Setter for ID is typically not used manually when @GeneratedValue is present
    public void setId(Long id) {
        this.id = id;
    }

    public void setIccid(String iccid) {
        this.iccid = iccid;
    }

    public void setCustomerEmail(String customerEmail) {
        this.customerEmail = customerEmail;
    }

    public void setActive(boolean active) {
        this.active = active;
    }

    /**
     * Provides a string representation of the SimActivationRecord object.
     * Useful for logging and debugging.
     * @return A string containing the record's details.
     */
    @Override
    public String toString() {
        return "SimActivationRecord{" +
               "id=" + id +
               ", iccid='" + iccid + '\'' +
               ", customerEmail='" + customerEmail + '\'' +
               ", active=" + active +
               '}';
    }
}

